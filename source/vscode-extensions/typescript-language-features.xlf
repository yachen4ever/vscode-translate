<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="extensions/typescript-language-features/package" source-language="en" datatype="plaintext"><body>
    <trans-unit id="displayName">
      <source xml:lang="en">TypeScript and JavaScript Language Features</source>
    </trans-unit>
    <trans-unit id="description">
      <source xml:lang="en">Provides rich language support for JavaScript and TypeScript.</source>
    </trans-unit>
    <trans-unit id="reloadProjects.title">
      <source xml:lang="en">Reload Project</source>
    </trans-unit>
    <trans-unit id="configuration.typescript">
      <source xml:lang="en">TypeScript</source>
    </trans-unit>
    <trans-unit id="configuration.suggest.completeFunctionCalls">
      <source xml:lang="en">Complete functions with their parameter signature.</source>
    </trans-unit>
    <trans-unit id="configuration.suggest.includeAutomaticOptionalChainCompletions">
      <source xml:lang="en">Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires TS 3.7+ and strict null checks to be enabled.</source>
    </trans-unit>
    <trans-unit id="typescript.tsdk.desc">
      <source xml:lang="en">Specifies the folder path to the tsserver and lib*.d.ts files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.

- When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.
- When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.

See the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.</source>
    </trans-unit>
    <trans-unit id="typescript.disableAutomaticTypeAcquisition">
      <source xml:lang="en">Disables automatic type acquisition. Automatic type acquisition fetches `@types` packages from npm to improve IntelliSense for external libraries.</source>
    </trans-unit>
    <trans-unit id="typescript.enablePromptUseWorkspaceTsdk">
      <source xml:lang="en">Enables prompting of users to use the TypeScript version configured in the workspace for Intellisense.</source>
    </trans-unit>
    <trans-unit id="typescript.tsserver.log">
      <source xml:lang="en">Enables logging of the TS server to a file. This log can be used to diagnose TS Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project.</source>
    </trans-unit>
    <trans-unit id="typescript.tsserver.pluginPaths">
      <source xml:lang="en">Additional paths to discover TypeScript Language Service plugins.</source>
    </trans-unit>
    <trans-unit id="typescript.tsserver.pluginPaths.item">
      <source xml:lang="en">Either an absolute or relative path. Relative path will be resolved against workspace folder(s).</source>
    </trans-unit>
    <trans-unit id="typescript.tsserver.trace">
      <source xml:lang="en">Enables tracing of messages sent to the TS server. This trace can be used to diagnose TS Server issues. The trace may contain file paths, source code, and other potentially sensitive information from your project.</source>
    </trans-unit>
    <trans-unit id="typescript.validate.enable">
      <source xml:lang="en">Enable/disable TypeScript validation.</source>
    </trans-unit>
    <trans-unit id="typescript.format.enable">
      <source xml:lang="en">Enable/disable default TypeScript formatter.</source>
    </trans-unit>
    <trans-unit id="javascript.format.enable">
      <source xml:lang="en">Enable/disable default JavaScript formatter.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterCommaDelimiter">
      <source xml:lang="en">Defines space handling after a comma delimiter.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterConstructor">
      <source xml:lang="en">Defines space handling after the constructor keyword.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterSemicolonInForStatements">
      <source xml:lang="en">Defines space handling after a semicolon in a for statement.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceBeforeAndAfterBinaryOperators">
      <source xml:lang="en">Defines space handling after a binary operator.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterKeywordsInControlFlowStatements">
      <source xml:lang="en">Defines space handling after keywords in a control flow statement.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterFunctionKeywordForAnonymousFunctions">
      <source xml:lang="en">Defines space handling after function keyword for anonymous functions.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceBeforeFunctionParenthesis">
      <source xml:lang="en">Defines space handling before function argument parentheses.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis">
      <source xml:lang="en">Defines space handling after opening and before closing non-empty parenthesis.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets">
      <source xml:lang="en">Defines space handling after opening and before closing non-empty brackets.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces">
      <source xml:lang="en">Defines space handling after opening and before closing non-empty braces.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces">
      <source xml:lang="en">Defines space handling after opening and before closing template string braces.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces">
      <source xml:lang="en">Defines space handling after opening and before closing JSX expression braces.</source>
    </trans-unit>
    <trans-unit id="format.insertSpaceAfterTypeAssertion">
      <source xml:lang="en">Defines space handling after type assertions in TypeScript.</source>
    </trans-unit>
    <trans-unit id="format.placeOpenBraceOnNewLineForFunctions">
      <source xml:lang="en">Defines whether an open brace is put onto a new line for functions or not.</source>
    </trans-unit>
    <trans-unit id="format.placeOpenBraceOnNewLineForControlBlocks">
      <source xml:lang="en">Defines whether an open brace is put onto a new line for control blocks or not.</source>
    </trans-unit>
    <trans-unit id="format.semicolons">
      <source xml:lang="en">Defines handling of optional semicolons. Requires using TypeScript 3.7 or newer in the workspace.</source>
    </trans-unit>
    <trans-unit id="format.semicolons.ignore">
      <source xml:lang="en">Don't insert or remove any semicolons.</source>
    </trans-unit>
    <trans-unit id="format.semicolons.insert">
      <source xml:lang="en">Insert semicolons at statement ends.</source>
    </trans-unit>
    <trans-unit id="format.semicolons.remove">
      <source xml:lang="en">Remove unnecessary semicolons.</source>
    </trans-unit>
    <trans-unit id="javascript.validate.enable">
      <source xml:lang="en">Enable/disable JavaScript validation.</source>
    </trans-unit>
    <trans-unit id="goToProjectConfig.title">
      <source xml:lang="en">Go to Project Configuration</source>
    </trans-unit>
    <trans-unit id="javascript.referencesCodeLens.enabled">
      <source xml:lang="en">Enable/disable references CodeLens in JavaScript files.</source>
    </trans-unit>
    <trans-unit id="javascript.referencesCodeLens.showOnAllFunctions">
      <source xml:lang="en">Enable/disable references CodeLens on all functions in JavaScript files.</source>
    </trans-unit>
    <trans-unit id="typescript.referencesCodeLens.enabled">
      <source xml:lang="en">Enable/disable references CodeLens in TypeScript files.</source>
    </trans-unit>
    <trans-unit id="typescript.referencesCodeLens.showOnAllFunctions">
      <source xml:lang="en">Enable/disable references CodeLens on all functions in TypeScript files.</source>
    </trans-unit>
    <trans-unit id="typescript.implementationsCodeLens.enabled">
      <source xml:lang="en">Enable/disable implementations CodeLens. This CodeLens shows the implementers of an interface.</source>
    </trans-unit>
    <trans-unit id="typescript.openTsServerLog.title">
      <source xml:lang="en">Open TS Server log</source>
    </trans-unit>
    <trans-unit id="typescript.restartTsServer">
      <source xml:lang="en">Restart TS server</source>
    </trans-unit>
    <trans-unit id="typescript.selectTypeScriptVersion.title">
      <source xml:lang="en">Select TypeScript Version...</source>
    </trans-unit>
    <trans-unit id="typescript.reportStyleChecksAsWarnings">
      <source xml:lang="en">Report style checks as warnings.</source>
    </trans-unit>
    <trans-unit id="javascript.implicitProjectConfig.checkJs">
      <source xml:lang="en">Enable/disable semantic checking of JavaScript files. Existing jsconfig.json or tsconfig.json files override this setting.</source>
    </trans-unit>
    <trans-unit id="typescript.npm">
      <source xml:lang="en">Specifies the path to the npm executable used for Automatic Type Acquisition.</source>
    </trans-unit>
    <trans-unit id="typescript.check.npmIsInstalled">
      <source xml:lang="en">Check if npm is installed for Automatic Type Acquisition.</source>
    </trans-unit>
    <trans-unit id="configuration.suggest.names">
      <source xml:lang="en">Enable/disable including unique names from the file in JavaScript suggestions. Note that name suggestions are always disabled in JavaScript code that is semantically checked using `@ts-check` or `checkJs`.</source>
    </trans-unit>
    <trans-unit id="typescript.tsc.autoDetect">
      <source xml:lang="en">Controls auto detection of tsc tasks.</source>
    </trans-unit>
    <trans-unit id="typescript.tsc.autoDetect.off">
      <source xml:lang="en">Disable this feature.</source>
    </trans-unit>
    <trans-unit id="typescript.tsc.autoDetect.on">
      <source xml:lang="en">Create both build and watch tasks.</source>
    </trans-unit>
    <trans-unit id="typescript.tsc.autoDetect.build">
      <source xml:lang="en">Only create single run compile tasks.</source>
    </trans-unit>
    <trans-unit id="typescript.tsc.autoDetect.watch">
      <source xml:lang="en">Only create compile and watch tasks.</source>
    </trans-unit>
    <trans-unit id="typescript.problemMatchers.tsc.label">
      <source xml:lang="en">TypeScript problems</source>
    </trans-unit>
    <trans-unit id="typescript.problemMatchers.tscWatch.label">
      <source xml:lang="en">TypeScript problems (watch mode)</source>
    </trans-unit>
    <trans-unit id="configuration.suggest.paths">
      <source xml:lang="en">Enable/disable suggestions for paths in import statements and require calls.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.useSeparateSyntaxServer">
      <source xml:lang="en">Enable/disable spawning a separate TypeScript server that can more quickly respond to syntax related operations, such as calculating folding or computing document symbols. Requires using TypeScript 3.4.0 or newer in the workspace.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.maxTsServerMemory">
      <source xml:lang="en">Set the maximum amount of memory (in MB) to allocate to the TypeScript server process</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.experimental.enableProjectDiagnostics">
      <source xml:lang="en">(Experimental) Enables project wide error reporting.</source>
    </trans-unit>
    <trans-unit id="typescript.locale">
      <source xml:lang="en">Sets the locale used to report JavaScript and TypeScript errors. Default of `null` uses VS Code's locale.</source>
    </trans-unit>
    <trans-unit id="javascript.implicitProjectConfig.experimentalDecorators">
      <source xml:lang="en">Enable/disable `experimentalDecorators` for JavaScript files that are not part of a project. Existing jsconfig.json or tsconfig.json files override this setting.</source>
    </trans-unit>
    <trans-unit id="configuration.suggest.autoImports">
      <source xml:lang="en">Enable/disable auto import suggestions.</source>
    </trans-unit>
    <trans-unit id="taskDefinition.tsconfig.description">
      <source xml:lang="en">The tsconfig file that defines the TS build.</source>
    </trans-unit>
    <trans-unit id="javascript.suggestionActions.enabled">
      <source xml:lang="en">Enable/disable suggestion diagnostics for JavaScript files in the editor.</source>
    </trans-unit>
    <trans-unit id="typescript.suggestionActions.enabled">
      <source xml:lang="en">Enable/disable suggestion diagnostics for TypeScript files in the editor.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.quoteStyle">
      <source xml:lang="en">Preferred quote style to use for quick fixes: `single` quotes, `double` quotes, or `auto` infer quote type from existing imports.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifier">
      <source xml:lang="en">Preferred path style for auto imports.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifier.auto">
      <source xml:lang="en">Automatically select import path style. Prefers using a relative import if `baseUrl` is configured and the relative path has fewer segments than the non-relative import.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifier.relative">
      <source xml:lang="en">Relative to the file location.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifier.nonRelative">
      <source xml:lang="en">Based on the `baseUrl` configured in your `jsconfig.json` / `tsconfig.json`.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifierEnding">
      <source xml:lang="en">Preferred path ending for auto imports.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifierEnding.auto">
      <source xml:lang="en">Use project settings to select a default.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifierEnding.minimal">
      <source xml:lang="en">Shorten `./component/index.js` to `./component`.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifierEnding.index">
      <source xml:lang="en">Shorten `./component/index.js` to `./component/index`.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.importModuleSpecifierEnding.js">
      <source xml:lang="en">Do not shorten path endings; include the `.js` extension.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.includePackageJsonAutoImports">
      <source xml:lang="en">Enable/disable searching `package.json` dependencies for available auto imports.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.includePackageJsonAutoImports.auto">
      <source xml:lang="en">Search dependencies based on estimated performance impact.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.includePackageJsonAutoImports.on">
      <source xml:lang="en">Always search dependencies.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.includePackageJsonAutoImports.off">
      <source xml:lang="en">Never search dependencies.</source>
    </trans-unit>
    <trans-unit id="typescript.updateImportsOnFileMove.enabled">
      <source xml:lang="en">Enable/disable automatic updating of import paths when you rename or move a file in VS Code.</source>
    </trans-unit>
    <trans-unit id="typescript.updateImportsOnFileMove.enabled.prompt">
      <source xml:lang="en">Prompt on each rename.</source>
    </trans-unit>
    <trans-unit id="typescript.updateImportsOnFileMove.enabled.always">
      <source xml:lang="en">Always update paths automatically.</source>
    </trans-unit>
    <trans-unit id="typescript.updateImportsOnFileMove.enabled.never">
      <source xml:lang="en">Never rename paths and don't prompt.</source>
    </trans-unit>
    <trans-unit id="typescript.autoClosingTags">
      <source xml:lang="en">Enable/disable automatic closing of JSX tags.</source>
    </trans-unit>
    <trans-unit id="typescript.suggest.enabled">
      <source xml:lang="en">Enabled/disable autocomplete suggestions.</source>
    </trans-unit>
    <trans-unit id="configuration.surveys.enabled">
      <source xml:lang="en">Enabled/disable occasional surveys that help us improve VS Code's JavaScript and TypeScript support.</source>
    </trans-unit>
    <trans-unit id="configuration.suggest.completeJSDocs">
      <source xml:lang="en">Enable/disable suggestion to complete JSDoc comments.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions">
      <source xml:lang="en">Configure which watching strategies should be used to keep track of files and directories. Requires using TypeScript 3.8+ in the workspace.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchFile">
      <source xml:lang="en">Strategy for how individual files are watched.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchFile.fixedPollingInterval">
      <source xml:lang="en">Check every file for changes several times a second at a fixed interval.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchFile.priorityPollingInterval">
      <source xml:lang="en">Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling">
      <source xml:lang="en">Use a dynamic queue where less-frequently modified files will be checked less often.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchFile.useFsEvents">
      <source xml:lang="en">Attempt to use the operating system/file system’s native events for file changes.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory">
      <source xml:lang="en">Attempt to use the operating system/file system’s native events to listen for changes on a file’s containing directories. This can use fewer file watchers, but might be less accurate.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchDirectory">
      <source xml:lang="en">Strategy for how entire directory trees are watched under systems that lack recursive file-watching functionality.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval">
      <source xml:lang="en">Check every directory for changes several times a second at a fixed interval.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling">
      <source xml:lang="en">Use a dynamic queue where less-frequently modified directories will be checked less often.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.watchDirectory.useFsEvents">
      <source xml:lang="en">Attempt to use the operating system/file system’s native events for directory changes.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.fallbackPolling">
      <source xml:lang="en">When using file system events, this option specifies the polling strategy that gets used when the system runs out of native file watchers and/or doesn’t support native file watchers.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval">
      <source xml:lang="en">Check every file for changes several times a second at a fixed interval.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval">
      <source xml:lang="en">Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ">
      <source xml:lang="en">Use a dynamic queue where less-frequently modified files will be checked less often.</source>
    </trans-unit>
    <trans-unit id="configuration.tsserver.watchOptions.synchronousWatchDirectory">
      <source xml:lang="en">Disable deferred watching on directories. Deferred watching is useful when lots of file changes might occur at once (e.g. a change in node_modules from running npm install), but you might want to disable it with this flag for some less-common setups.</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.renameShorthandProperties.deprecationMessage">
      <source xml:lang="en">The setting 'typescript.preferences.renameShorthandProperties' has been deprecated in favor of 'typescript.preferences.useAliasesForRenames'</source>
    </trans-unit>
    <trans-unit id="typescript.preferences.useAliasesForRenames">
      <source xml:lang="en">Enable/disable introducing aliases for object shorthand properties during renames. Requires using TypeScript 3.4 or newer in the workspace.</source>
    </trans-unit>
    <trans-unit id="typescript.workspaceSymbols.scope">
      <source xml:lang="en">Controls which files are searched by [go to symbol in workspace](https://code.visualstudio.com/docs/editor/editingevolved#_open-symbol-by-name).</source>
    </trans-unit>
    <trans-unit id="typescript.workspaceSymbols.scope.allOpenProjects">
      <source xml:lang="en">Search all open JavaScript or TypeScript projects for symbols. Requires using TypeScript 3.9 or newer in the workspace.</source>
    </trans-unit>
    <trans-unit id="typescript.workspaceSymbols.scope.currentProject">
      <source xml:lang="en">Only search for symbols in the current JavaScript or TypeScript project.</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.extract.constant.title">
      <source xml:lang="en">Extract constant</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.extract.constant.description">
      <source xml:lang="en">Extract expression to constant.</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.extract.function.title">
      <source xml:lang="en">Extract function</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.extract.function.description">
      <source xml:lang="en">Extract expression to method or function.</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.extract.type.title">
      <source xml:lang="en">Extract type</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.extract.type.description">
      <source xml:lang="en">Extract type to a type alias.</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.extract.interface.title">
      <source xml:lang="en">Extract interface</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.extract.interface.description">
      <source xml:lang="en">Extract type to an interface.</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.rewrite.import.title">
      <source xml:lang="en">Convert import</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.rewrite.import.description">
      <source xml:lang="en">Convert between named imports and namespace imports.</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.rewrite.export.title">
      <source xml:lang="en">Convert export</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.rewrite.export.description">
      <source xml:lang="en">Convert between default export and named export.</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.move.newFile.title">
      <source xml:lang="en">Move to a new file</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.move.newFile.description">
      <source xml:lang="en">Move the expression to a new file.</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.rewrite.arrow.braces.title">
      <source xml:lang="en">Rewrite arrow braces</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.rewrite.arrow.braces.description">
      <source xml:lang="en">Add or remove braces in an arrow function.</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.rewrite.parameters.toDestructured.title">
      <source xml:lang="en">Convert parameters to destructured object</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.rewrite.property.generateAccessors.title">
      <source xml:lang="en">Generate accessors</source>
    </trans-unit>
    <trans-unit id="codeActions.refactor.rewrite.property.generateAccessors.description">
      <source xml:lang="en">Generate 'get' and 'set' accessors</source>
    </trans-unit>
    <trans-unit id="codeActions.source.organizeImports.title">
      <source xml:lang="en">Organize imports</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/utils/api" source-language="en" datatype="plaintext"><body>
    <trans-unit id="invalidVersion">
      <source xml:lang="en">invalid version</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/utils/tsconfig" source-language="en" datatype="plaintext"><body>
    <trans-unit id="typescript.configureTsconfigQuickPick">
      <source xml:lang="en">Configure tsconfig.json</source>
    </trans-unit>
    <trans-unit id="typescript.configureJsconfigQuickPick">
      <source xml:lang="en">Configure jsconfig.json</source>
    </trans-unit>
    <trans-unit id="typescript.noTypeScriptProjectConfig">
      <source xml:lang="en">File is not part of a TypeScript project. Click [here]({0}) to learn more.</source>
    </trans-unit>
    <trans-unit id="typescript.noJavaScriptProjectConfig">
      <source xml:lang="en">File is not part of a JavaScript project Click [here]({0}) to learn more.</source>
    </trans-unit>
    <trans-unit id="typescript.projectConfigNoWorkspace">
      <source xml:lang="en">Please open a folder in VS Code to use a TypeScript or JavaScript project</source>
    </trans-unit>
    <trans-unit id="typescript.projectConfigUnsupportedFile">
      <source xml:lang="en">Could not determine TypeScript or JavaScript project. Unsupported file type</source>
    </trans-unit>
    <trans-unit id="typescript.projectConfigCouldNotGetInfo">
      <source xml:lang="en">Could not determine TypeScript or JavaScript project</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/languageFeatures/codeLens/baseCodeLensProvider" source-language="en" datatype="plaintext"><body>
    <trans-unit id="referenceErrorLabel">
      <source xml:lang="en">Could not determine references</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/languageFeatures/completions" source-language="en" datatype="plaintext"><body>
    <trans-unit id="selectCodeAction">
      <source xml:lang="en">Select code action to apply</source>
    </trans-unit>
    <trans-unit id="acquiringTypingsLabel">
      <source xml:lang="en">Acquiring typings...</source>
      <note>Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized</note>
    </trans-unit>
    <trans-unit id="acquiringTypingsDetail">
      <source xml:lang="en">Acquiring typings definitions for IntelliSense.</source>
      <note>Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized</note>
    </trans-unit>
    <trans-unit id="autoImportLabel">
      <source xml:lang="en">Auto import from {0}</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/languageFeatures/directiveCommentCompletions" source-language="en" datatype="plaintext"><body>
    <trans-unit id="ts-check">
      <source xml:lang="en">Enables semantic checking in a JavaScript file. Must be at the top of a file.</source>
    </trans-unit>
    <trans-unit id="ts-nocheck">
      <source xml:lang="en">Disables semantic checking in a JavaScript file. Must be at the top of a file.</source>
    </trans-unit>
    <trans-unit id="ts-ignore">
      <source xml:lang="en">Suppresses @ts-check errors on the next line of a file.</source>
    </trans-unit>
    <trans-unit id="ts-expect-error">
      <source xml:lang="en">Suppresses @ts-check errors on the next line of a file, expecting at least one to exist.</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/languageFeatures/codeLens/implementationsCodeLens" source-language="en" datatype="plaintext"><body>
    <trans-unit id="oneImplementationLabel">
      <source xml:lang="en">1 implementation</source>
    </trans-unit>
    <trans-unit id="manyImplementationLabel">
      <source xml:lang="en">{0} implementations</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/languageFeatures/jsDocCompletions" source-language="en" datatype="plaintext"><body>
    <trans-unit id="typescript.jsDocCompletionItem.documentation">
      <source xml:lang="en">JSDoc comment</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/languageFeatures/organizeImports" source-language="en" datatype="plaintext"><body>
    <trans-unit id="organizeImportsAction.title">
      <source xml:lang="en">Organize Imports</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/languageFeatures/quickFix" source-language="en" datatype="plaintext"><body>
    <trans-unit id="fixAllInFileLabel">
      <source xml:lang="en">{0} (Fix all in file)</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/languageFeatures/fixAll" source-language="en" datatype="plaintext"><body>
    <trans-unit id="autoFix.label">
      <source xml:lang="en">Fix All</source>
    </trans-unit>
    <trans-unit id="autoFix.unused.label">
      <source xml:lang="en">Remove all unused code</source>
    </trans-unit>
    <trans-unit id="autoFix.missingImports.label">
      <source xml:lang="en">Add all missing imports</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/languageFeatures/refactor" source-language="en" datatype="plaintext"><body>
    <trans-unit id="refactoringFailed">
      <source xml:lang="en">Could not apply refactoring</source>
    </trans-unit>
    <trans-unit id="extractConstant.disabled.title">
      <source xml:lang="en">Extract to constant</source>
    </trans-unit>
    <trans-unit id="extractConstant.disabled.reason">
      <source xml:lang="en">The current selection cannot be extracted</source>
    </trans-unit>
    <trans-unit id="extractFunction.disabled.title">
      <source xml:lang="en">Extract to function</source>
    </trans-unit>
    <trans-unit id="extractFunction.disabled.reason">
      <source xml:lang="en">The current selection cannot be extracted</source>
    </trans-unit>
    <trans-unit id="refactor.documentation.title">
      <source xml:lang="en">Learn more about JS/TS refactorings</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/languageFeatures/codeLens/referencesCodeLens" source-language="en" datatype="plaintext"><body>
    <trans-unit id="oneReferenceLabel">
      <source xml:lang="en">1 reference</source>
    </trans-unit>
    <trans-unit id="manyReferenceLabel">
      <source xml:lang="en">{0} references</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/languageFeatures/rename" source-language="en" datatype="plaintext"><body>
    <trans-unit id="fileRenameFail">
      <source xml:lang="en">An error occurred while renaming file</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/tsServer/versionStatus" source-language="en" datatype="plaintext"><body>
    <trans-unit id="projectQuickPick.placeholder">
      <source xml:lang="en">TypeScript Project Info</source>
    </trans-unit>
    <trans-unit id="projectQuickPick.version.label">
      <source xml:lang="en">Select TypeScript Version...</source>
    </trans-unit>
    <trans-unit id="projectQuickPick.project.create">
      <source xml:lang="en">Create tsconfig</source>
    </trans-unit>
    <trans-unit id="projectQuickPick.project.create.description">
      <source xml:lang="en">This file is currently not part of a tsconfig/jsconfig project</source>
    </trans-unit>
    <trans-unit id="projectQuickPick.version.goProjectConfig">
      <source xml:lang="en">Open tsconfig</source>
    </trans-unit>
    <trans-unit id="projectQuickPick.help">
      <source xml:lang="en">TypeScript help</source>
    </trans-unit>
    <trans-unit id="projectInfo.name">
      <source xml:lang="en">TypeScript: Project Info</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/typescriptServiceClient" source-language="en" datatype="plaintext"><body>
    <trans-unit id="noServerFound">
      <source xml:lang="en">The path {0} doesn't point to a valid tsserver install. Falling back to bundled TypeScript version.</source>
    </trans-unit>
    <trans-unit id="serverExitedWithError">
      <source xml:lang="en">TypeScript language server exited with error. Error message is: {0}</source>
    </trans-unit>
    <trans-unit id="typescript.openTsServerLog.loggingNotEnabled">
      <source xml:lang="en">TS Server logging is off. Please set `typescript.tsserver.log` and restart the TS server to enable logging</source>
    </trans-unit>
    <trans-unit id="typescript.openTsServerLog.enableAndReloadOption">
      <source xml:lang="en">Enable logging and restart TS server</source>
    </trans-unit>
    <trans-unit id="typescript.openTsServerLog.noLogFile">
      <source xml:lang="en">TS Server has not started logging.</source>
    </trans-unit>
    <trans-unit id="openTsServerLog.openFileFailedFailed">
      <source xml:lang="en">Could not open TS Server log file</source>
    </trans-unit>
    <trans-unit id="serverDiedReportIssue">
      <source xml:lang="en">Report Issue</source>
    </trans-unit>
    <trans-unit id="serverDiedAfterStart">
      <source xml:lang="en">The TypeScript language service died 5 times right after it got started. The service will not be restarted.</source>
    </trans-unit>
    <trans-unit id="serverDied">
      <source xml:lang="en">The TypeScript language service died unexpectedly 5 times in the last 5 Minutes.</source>
    </trans-unit>
    <trans-unit id="serverDiedOnce">
      <source xml:lang="en">The TypeScript language service died unexpectedly.</source>
    </trans-unit>
    <trans-unit id="serverLoading.progress">
      <source xml:lang="en">Initializing JS/TS language features</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/tsServer/versionManager" source-language="en" datatype="plaintext"><body>
    <trans-unit id="selectTsVersion">
      <source xml:lang="en">Select the TypeScript version used for JavaScript and TypeScript language features</source>
    </trans-unit>
    <trans-unit id="useVSCodeVersionOption">
      <source xml:lang="en">Use VS Code's Version</source>
    </trans-unit>
    <trans-unit id="useWorkspaceVersionOption">
      <source xml:lang="en">Use Workspace Version</source>
    </trans-unit>
    <trans-unit id="allow">
      <source xml:lang="en">Allow</source>
    </trans-unit>
    <trans-unit id="dismiss">
      <source xml:lang="en">Dismiss</source>
    </trans-unit>
    <trans-unit id="suppress prompt">
      <source xml:lang="en">Never in this Workspace</source>
    </trans-unit>
    <trans-unit id="promptUseWorkspaceTsdk">
      <source xml:lang="en">This workspace contains a TypeScript version. Would you like to use the workspace TypeScript version for TypeScript and JavaScript language features?</source>
    </trans-unit>
    <trans-unit id="learnMore">
      <source xml:lang="en">Learn more about managing TypeScript versions</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/utils/logger" source-language="en" datatype="plaintext"><body>
    <trans-unit id="channelName">
      <source xml:lang="en">TypeScript</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/utils/typingsStatus" source-language="en" datatype="plaintext"><body>
    <trans-unit id="installingPackages">
      <source xml:lang="en">Fetching data for better TypeScript IntelliSense</source>
    </trans-unit>
    <trans-unit id="typesInstallerInitializationFailed.doNotCheckAgain">
      <source xml:lang="en">Don't Show Again</source>
    </trans-unit>
    <trans-unit id="typesInstallerInitializationFailed.title">
      <source xml:lang="en">Could not install typings files for JavaScript language features. Please ensure that NPM is installed or configure 'typescript.npm' in your user settings. Click [here]({0}) to learn more.</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/utils/largeProjectStatus" source-language="en" datatype="plaintext"><body>
    <trans-unit id="statusExclude">
      <source xml:lang="en">TypeScript: Configure Excludes</source>
    </trans-unit>
    <trans-unit id="hintExclude">
      <source xml:lang="en">To enable project-wide JavaScript/TypeScript language features, exclude folders with many files, like: {0}</source>
    </trans-unit>
    <trans-unit id="hintExclude.generic">
      <source xml:lang="en">To enable project-wide JavaScript/TypeScript language features, exclude large folders with source files that you do not work on.</source>
    </trans-unit>
    <trans-unit id="large.label">
      <source xml:lang="en">Configure Excludes</source>
    </trans-unit>
    <trans-unit id="hintExclude.tooltip">
      <source xml:lang="en">To enable project-wide JavaScript/TypeScript language features, exclude large folders with source files that you do not work on.</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/languageFeatures/updatePathsOnRename" source-language="en" datatype="plaintext"><body>
    <trans-unit id="renameProgress.title">
      <source xml:lang="en">Checking for update of JS/TS imports</source>
    </trans-unit>
    <trans-unit id="prompt">
      <source xml:lang="en">Update imports for '{0}'?</source>
    </trans-unit>
    <trans-unit id="promptMoreThanOne">
      <source xml:lang="en">Update imports for the following {0} files?</source>
    </trans-unit>
    <trans-unit id="reject.title">
      <source xml:lang="en">No</source>
    </trans-unit>
    <trans-unit id="accept.title">
      <source xml:lang="en">Yes</source>
    </trans-unit>
    <trans-unit id="always.title">
      <source xml:lang="en">Always automatically update imports</source>
    </trans-unit>
    <trans-unit id="never.title">
      <source xml:lang="en">Never automatically update imports</source>
    </trans-unit>
    <trans-unit id="moreFile">
      <source xml:lang="en">...1 additional file not shown</source>
    </trans-unit>
    <trans-unit id="moreFiles">
      <source xml:lang="en">...{0} additional files not shown</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/tsServer/serverProcess.electron" source-language="en" datatype="plaintext"><body>
    <trans-unit id="noServerFound">
      <source xml:lang="en">The path {0} doesn't point to a valid tsserver install. Falling back to bundled TypeScript version.</source>
    </trans-unit>
  </body></file>
  <file original="extensions/typescript-language-features/dist/task/taskProvider" source-language="en" datatype="plaintext"><body>
    <trans-unit id="badTsConfig">
      <source xml:lang="en">TypeScript Task in tasks.json contains "\\". TypeScript tasks tsconfig must use "/"</source>
    </trans-unit>
    <trans-unit id="buildTscLabel">
      <source xml:lang="en">build - {0}</source>
    </trans-unit>
    <trans-unit id="buildAndWatchTscLabel">
      <source xml:lang="en">watch - {0}</source>
    </trans-unit>
  </body></file>
</xliff>